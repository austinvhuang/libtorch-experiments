default: cmake-build

clean:
	rm -r libtorch
	rm -r build
	rm -f libtorch-macos-latest.zip
	rm -f nca

lib: 
	wget https://download.pytorch.org/libtorch/cu110/libtorch-cxx11-abi-shared-with-deps-1.7.1%2Bcu110.zip -O libtorch.zip
	unzip -o libtorch.zip
	rm libtorch.zip

cmake-build: lib
	mkdir -p build
	cd build; cmake -DCMAKE_PREFIX_PATH=$(PWD)/libtorch \
		-DCMAKE_CXX_COMPILER=clang++ ..
	cd build; cmake --build . --config Release
	cd build; ./nca

scratch-build: lib
	clang++ nca.cpp \
		-fcolor-diagnostics \
		-I $(PWD)/libtorch/include/torch/csrc/api/include/ \
		-I $(PWD)/libtorch/include \
		-L $(PWD)/libtorch/lib \
		-ltorch_cpu -lc10 \
		-std=c++17
		-o nca
	export DYLD_LIBRARY_PATH=$(PWD)/libtorch/lib; ./nca

rebuild1:
	mkdir -p build
	cd build; cmake -DCMAKE_PREFIX_PATH=$(PWD)/../libtorch \
		-DCMAKE_CXX_FLAGS="-g -std=c++17" \
		-DCMAKE_CXX_COMPILER=clang++ ..
		-DCUDNN_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu
	cd build; cmake --build . --config Debug
	cd build; ./nca 2> /dev/null

rebuild2:
	time clang++ -g -std=c++20 nca.cpp \
		-fcolor-diagnostics \
		-I $(PWD)/libtorch/include/torch/csrc/api/include/ \
		-I $(PWD)/libtorch/include \
		-L $(PWD)/libtorch/lib \
		-ltorch_cuda -ltorch_cpu -lc10 \
		-o nca
	export LD_LIBRARY_PATH=$(PWD)/libtorch/lib; time ./nca

# time clang++ -g -std=c++17 nca.cpp \

em-nca: 
	emcc nca.cpp \
		-fcolor-diagnostics \
 		-Lpytorch/build/usr/local/lib \
 		-lclog -lcpuinfo \
		-Wl,--whole-archive \
 		-ltorch_cpu -ltorch -lc10 \
		-Wl,--no-whole-archive \
 		-Ipytorch/build/usr/local/include \
 		-Ipytorch/build/usr/local/include/torch/csrc/ \
 		-Ipytorch/build/usr/local/include/torch/csrc/api/include/ \
 		-Ibuild/usr/local/include/torch/csrc/api/include \
		-s DISABLE_EXCEPTION_CATCHING=0 -Wno-parentheses \
 		pytorch/third_party/cpuinfo/src/emscripten/init.c \
 		-Ipytorch/third_party/cpuinfo/src \
		-s ERROR_ON_UNDEFINED_SYMBOLS=0 \
		-o nca.html

watcher:
		rg nca.cpp Makefile.ubuntu --files | entr -s "make -f Makefile.ubuntu rebuild2"

cf:
		rg nca.cpp --files | entr -s "clang-format -i nca.cpp"

precompile_header:
	time clang++ -c torch_pch.hpp \
		-fcolor-diagnostics \
		-I $(PWD)/libtorch/include/torch/csrc/api/include/ \
		-I $(PWD)/libtorch/include

debug:
	time clang++ -g -std=c++20 nca.cpp \
		-fcolor-diagnostics \
		-I $(PWD)/libtorch/include/torch/csrc/api/include/ \
		-I $(PWD)/libtorch/include \
		-L $(PWD)/libtorch/lib \
		-ltorch_cuda -ltorch_cpu -lc10 \
		-o nca
	source setenv; lldb ./nca
	
view:
	feh -Z --force-aliasing -g 1024x768 state*.ppm


# run from an images_* directory
movie:
	ffmpeg -framerate 120 -pattern_type glob -i "state_*.ppm" -crf 0 -vf scale=400:400 -sws_flags neighbor output.mp4

readppm:
	time clang++ -g -std=c++20 readppm.cpp \
		-fcolor-diagnostics \
		-I $(PWD)/libtorch/include/torch/csrc/api/include/ \
		-I $(PWD)/libtorch/include \
		-L $(PWD)/libtorch/lib \
		-ltorch_cuda -ltorch_cpu -lc10 \
		-o readppm
	export LD_LIBRARY_PATH=$(PWD)/libtorch/lib; ./readppm
